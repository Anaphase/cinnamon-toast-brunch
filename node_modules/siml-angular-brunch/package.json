{
  "name": "siml-angular-brunch",
  "version": "1.0.1",
  "description": "Adds SIML support to Brunch, with an AngularJS flavor.",
  "author": {
    "name": "Colin Wood"
  },
  "homepage": "https://github.com/Anaphase/siml-angular-brunch",
  "repository": {
    "type": "git",
    "url": "git@github.com:Anaphase/siml-angular-brunch.git"
  },
  "main": "./lib/index",
  "scripts": {
    "prepublish": "rm -rf lib && node_modules/.bin/coffee --bare --output lib/ src/"
  },
  "dependencies": {
    "siml": "~0.3.6",
    "mkdirp": "~0.3.5"
  },
  "devDependencies": {
    "coffee-script": "~1.6.2"
  },
  "readme": "## siml-angular-brunch\nAdds [SIML](https://github.com/padolsey/SIML) support to [Brunch](http://brunch.io), with an AngularJS flavor.\n\n## How It Works\nsiml-angular-brunch searches the `templates.joinTo` directory and compiles any file with the `.siml` extension, excluding the assets directory. The compiled HTML is placed in an AngularJS module specified by `plugins.siml.moduleName`. Optionally, siml-angular-brunch can generate a simple AngularJS router with the compiled files. See below for details.\n\n## Usage\nInstall the plugin via npm with `npm install --save siml-angular-brunch`.\n\nOr, do manual install:\n\n* Add `\"siml-angular-brunch\": \"x.y.z\"` to `package.json` of your Brunch app. Pick a plugin version that corresponds to your minor (y) Brunch version.\n* If you want to use git version of plugin, add `\"siml-angular-brunch\": \"git+ssh://git@github.com:Anaphase/siml-angular-brunch.git\"`.\n\n## Sample Brunch config.coffee\n```coffee-script\nexports.config =\n  \n  framework: 'AngularJS'\n  \n  modules:\n    wrapper: no\n    definition: no\n  \n  files:\n    \n    # other config stuff here\n    \n    templates:\n      defaultExtension: 'siml'\n      joinTo:\n        'js/app.js' : /^app/ # search entire app directory for .siml files and place AngularJS module in js/app.js\n  \n  # you can customize smil-angular-brunch here\n  plugins:\n    siml:\n      moduleName: 'app.templates' # default: 'templates' - all .siml files will be compiled into an AngularJS module named <moduleName> in the templates.joinTo file\n      \n      # optional router config\n      createRouter: yes # default: no - generate a router module based on the compiled files\n      routerOptions:\n        moduleName: 'app.router' # default: 'router'\n        onlyUse: 'templates' # default: use all - only add .siml files that are in this directory to the router (usefull for when you have 'templates' and 'partials' directories)\n        defualtRoute: '/home' # default: none\n```\n\n## Optional Router Generation\nIf you set `plugins.siml.createRouter = yes`, then siml-angular-brunch will generate an additional module (specified by `plugins.siml.routerOptions.moduleName`) which contains a very simple AngularJS router for all of the compiled files. For example, this project structure:\n\n```\napp\n  app.coffee\n  assets\n    img\n    index.html\n    js\n  scripts\n    controllers.coffee\n    directives.coffee\n    filters.coffee\n    services.coffee\n  styles\n    styles.sass\n  templates\n    home.siml\n    products.siml\n    contact.siml\n```\n\nwill generate the following router module:\n\n```javascript\nangular.module('router', [])\n  .config(['$routeProvider', function($routeProvider) {\n    $routeProvider.when('/home', { controller: 'Home', templateUrl: 'templates/home.html' });\n    $routeProvider.when('/products', { controller: 'Products', templateUrl: 'templates/products.html' });\n    $routeProvider.when('/contact', { controller: 'Contact', templateUrl: 'templates/contact.html' });\n  }])\n```\n\nSee the example Brunch config.coffee above for details on configuring the router.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Colin Wood\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "_id": "siml-angular-brunch@1.0.1",
  "_from": "siml-angular-brunch@~1.0.0"
}
